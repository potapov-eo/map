{"version":3,"sources":["assets/cities.js","App.js","assets/mapStyle.js","index.js"],"names":["cities","id","name","lat","lng","mapContainerStyle","width","height","center","options","styles","marks","reduce","res","city","push","value","label","SliderWrapper","styled","div","GoogleMapWrapper","App","React","useState","selected","setSelected","googleMapsApiKey","language","zoom","map","onClick","position","onCloseClick","e","Slider","valueLabelDisplay","step","min","max","length","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAaA,EAAS,CAElB,CACIC,GAAI,EACJC,KAAM,6CACNC,IAAK,WACLC,IAAK,WAGT,CACIH,GAAI,EACJC,KAAM,uCACNC,IAAK,WACLC,IAAK,YAET,CACIH,GAAI,EACJC,KAAM,mDACNC,IAAK,WACLC,IAAK,WAGT,CACIH,GAAI,EACJC,KAAM,6CACNC,IAAK,WACLC,IAAK,YAET,CACIH,GAAI,EACJC,KAAM,iCACNC,IAAK,WACLC,IAAK,YAET,CACIH,GAAI,EACJC,KAAM,iCACNC,IAAK,WACLC,IAAK,YAET,CACIH,GAAI,EACJC,KAAM,mDACNC,IAAK,UACLC,IAAK,a,uBCpCPC,EAAoB,CACtBC,MAAO,OACPC,OAAQ,QAENC,EAAS,CACXL,IAAK,UACLC,IAAK,WAEHK,EAAU,CACZC,OCjBoB,CAAC,CACrB,YAAe,MACf,YAAe,gBACf,QAAW,CACX,CACI,OAAU,UAIlB,CACI,YAAe,MACf,YAAe,kBACf,QAAW,CACX,CACI,MAAS,aAIjB,CACI,YAAe,MACf,YAAe,cACf,QAAW,CACX,CACI,WAAc,QAItB,CACI,YAAe,YACf,YAAe,MACf,QAAW,CACX,CACI,MAAS,aAIjB,CACI,YAAe,YACf,YAAe,gBACf,QAAW,CACX,CACI,MAAS,aAIjB,CACI,YAAe,qBACf,YAAe,gBACf,QAAW,CACX,CACI,MAAS,aAIjB,CACI,YAAe,MACf,YAAe,MACf,QAAW,CACX,CACI,WAAc,SAItB,CACI,YAAe,OACf,YAAe,MACf,QAAW,CACX,CACI,YAAe,KAEnB,CACI,UAAa,MAIrB,CACI,YAAe,OACf,YAAe,gBACf,QAAW,CACX,CACI,MAAS,aAIjB,CACI,YAAe,OACf,YAAe,mBACf,QAAW,CACX,CACI,MAAS,aAIjB,CACI,YAAe,OACf,YAAe,qBACf,QAAW,CACX,CACI,MAAS,aAIjB,CACI,YAAe,eACf,YAAe,MACf,QAAW,CACX,CACI,WAAc,gBAItB,CACI,YAAe,gBACf,YAAe,cACf,QAAW,CACX,CACI,WAAc,SAItB,CACI,YAAe,UACf,YAAe,MACf,QAAW,CACX,CACI,WAAc,SAItB,CACI,YAAe,QACf,YAAe,MACf,QAAW,CACX,CACI,MAAS,WAEb,CACI,WAAc,QAItB,CACI,YAAe,QACf,YAAe,gBACf,QAAW,CACX,CACI,MAAS,aAIjB,CACI,YAAe,QACf,YAAe,mBACf,QAAW,CACX,CACI,MAAS,aAIjB,CACI,YAAe,QACf,YAAe,qBACf,QAAW,CACX,CACI,MAAS,eDjJbC,EAAQX,EAAOY,QAAO,SAACC,EAAKC,GAE5B,OADAD,EAAIE,KAAK,CAACC,MAAOF,EAAKb,GAAIgB,MAAOH,EAAKZ,OAC/BW,IACR,IACGK,EAAgBC,IAAOC,IAAV,+DAKbC,EAAmBF,IAAOC,IAAV,yFAwDPE,MAlDf,WAAgB,IAAD,EACqBC,IAAMC,SAAS,MADpC,mBACJC,EADI,KACMC,EADN,KAGX,OACI,eAAC,IAAD,CACIC,iBAAiB,0CAA0CC,SAAU,KADzE,UAGI,cAACP,EAAD,UACA,eAAC,IAAD,CACIhB,kBAAmBA,EACnBG,OAAQA,EACRqB,KAAM,EACNpB,QAASA,EAJb,UAOKT,EAAO8B,KAAI,SAAAhB,GAAI,OACZ,cAAC,IAAD,CACQiB,QAAS,WACLL,EAAYZ,IAEhBkB,SAAU,CAAC7B,IAAKW,EAAKX,IAAKC,IAAKU,EAAKV,MAJ/BU,EAAKb,OAOrBwB,EAAY,cAAC,IAAD,CACLO,SAAU,CAAC7B,IAAKsB,EAAStB,IAAKC,IAAKqB,EAASrB,KAC5C6B,aAvBC,SAACC,GAAD,OAAOR,EAAY,OAqBf,SAIL,gCACI,0FACA,6BACKD,EAASvB,YAItB,UAGR,cAACgB,EAAD,UAAe,cAACiB,EAAA,EAAD,CACXnB,MAAOS,EAAWA,EAASxB,GAAK,EAChCmC,kBAAkB,OAClBzB,MAAOA,EACP0B,KAAM,EACNC,IAAK,EACLC,IAAKvC,EAAOwC,OACZC,SAAU,SAACP,EAAGlB,GAAJ,OAAcU,EAAY1B,EAAOgB,EAAQ,aExEnE0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6a4b9ead.chunk.js","sourcesContent":["export const cities = [\n\n    {\n        id: 1,\n        name: \"Борисов\",\n        lat: 54.2144309,\n        lng: 28.508436\n    },\n\n    {\n        id: 2,\n        name: \"Жодино\",\n        lat: 54.1016136,\n        lng: 28.3471258\n    },\n    {\n        id: 3,\n        name: \"Заславль\",\n        lat: 54.0006143,\n        lng: 27.276841\n    },\n\n    {\n        id: 4,\n        name: \"Логойск\",\n        lat: 54.2042169,\n        lng: 27.8532022\n    },\n    {\n        id: 5,\n        name: \"Минск\",\n        lat: 53.9045398,\n        lng: 27.5615244\n    },\n    {\n        id: 6,\n        name: \"Раков\",\n        lat: 53.9667658,\n        lng: 27.0469131\n    },\n    {\n        id: 7,\n        name: \"Фаниполь\",\n        lat: 53.746238,\n        lng: 27.3375641\n    }\n]\n","import React from 'react';\nimport './App.css';\nimport {GoogleMap, InfoWindow, LoadScript, Marker,} from \"@react-google-maps/api\";\nimport {mapStyle} from \"./assets/mapStyle\"\nimport {cities} from \"./assets/cities\";\nimport Slider from '@material-ui/core/Slider'\nimport styled from 'styled-components'\n\nconst mapContainerStyle = {\n    width: \"50vw\",\n    height: \"50vh\"\n}\nconst center = {\n    lat: 53.893009,\n    lng: 27.567444\n}\nconst options = {\n    styles: mapStyle\n}\nlet marks = cities.reduce((res, city) => {\n    res.push({value: city.id, label: city.name})\n    return res\n}, [])\nconst SliderWrapper = styled.div`\n\n  width: 50vw;\n  margin: 20px;\n`;\nconst GoogleMapWrapper = styled.div`\n  border: 2px solid black;\n  width: 50vw;\n  margin: 20px;\n`;\n\nfunction App() {\n    const [selected, setSelected] = React.useState(null);\n    const onCloseClick = (e) => setSelected(null)\n    return (\n        <LoadScript\n            googleMapsApiKey=\"AIzaSyCJRO1CqygG-R_GDRHuZMLG4KF3fIFdor8\" language={\"ru\"}\n        >\n            <GoogleMapWrapper>\n            <GoogleMap\n                mapContainerStyle={mapContainerStyle}\n                center={center}\n                zoom={8}\n                options={options}\n\n            >\n                {cities.map(city => (\n                    <Marker key={city.id}\n                            onClick={() => {\n                                setSelected(city);\n                            }}\n                            position={{lat: city.lat, lng: city.lng}}\n                    />\n                ))}\n                {selected ? (<InfoWindow\n                        position={{lat: selected.lat, lng: selected.lng}}\n                        onCloseClick={onCloseClick}\n                    >\n                        <div>\n                            <h3>Вы выбрали:</h3>\n                            <h2>\n                                {selected.name}\n                            </h2>\n                        </div>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n            </GoogleMapWrapper>\n            <SliderWrapper><Slider\n                value={selected ? selected.id : 1}\n                valueLabelDisplay=\"auto\"\n                marks={marks}\n                step={1}\n                min={1}\n                max={cities.length}\n                onChange={(e, value) => setSelected(cities[value - 1])}\n            /></SliderWrapper>\n        </LoadScript>\n    );\n}\n\nexport default App;\n","export const mapStyle = [{\n    \"featureType\": \"all\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [\n    {\n        \"weight\": \"2.00\"\n    }\n]\n},\n{\n    \"featureType\": \"all\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n    {\n        \"color\": \"#9c9c9c\"\n    }\n]\n},\n{\n    \"featureType\": \"all\",\n    \"elementType\": \"labels.text\",\n    \"stylers\": [\n    {\n        \"visibility\": \"on\"\n    }\n]\n},\n{\n    \"featureType\": \"landscape\",\n    \"elementType\": \"all\",\n    \"stylers\": [\n    {\n        \"color\": \"#f2f2f2\"\n    }\n]\n},\n{\n    \"featureType\": \"landscape\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [\n    {\n        \"color\": \"#ffffff\"\n    }\n]\n},\n{\n    \"featureType\": \"landscape.man_made\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [\n    {\n        \"color\": \"#ffffff\"\n    }\n]\n},\n{\n    \"featureType\": \"poi\",\n    \"elementType\": \"all\",\n    \"stylers\": [\n    {\n        \"visibility\": \"off\"\n    }\n]\n},\n{\n    \"featureType\": \"road\",\n    \"elementType\": \"all\",\n    \"stylers\": [\n    {\n        \"saturation\": -100\n    },\n    {\n        \"lightness\": 45\n    }\n]\n},\n{\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [\n    {\n        \"color\": \"#eeeeee\"\n    }\n]\n},\n{\n    \"featureType\": \"road\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n    {\n        \"color\": \"#7b7b7b\"\n    }\n]\n},\n{\n    \"featureType\": \"road\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [\n    {\n        \"color\": \"#ffffff\"\n    }\n]\n},\n{\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"all\",\n    \"stylers\": [\n    {\n        \"visibility\": \"simplified\"\n    }\n]\n},\n{\n    \"featureType\": \"road.arterial\",\n    \"elementType\": \"labels.icon\",\n    \"stylers\": [\n    {\n        \"visibility\": \"off\"\n    }\n]\n},\n{\n    \"featureType\": \"transit\",\n    \"elementType\": \"all\",\n    \"stylers\": [\n    {\n        \"visibility\": \"off\"\n    }\n]\n},\n{\n    \"featureType\": \"water\",\n    \"elementType\": \"all\",\n    \"stylers\": [\n    {\n        \"color\": \"#46bcec\"\n    },\n    {\n        \"visibility\": \"on\"\n    }\n]\n},\n{\n    \"featureType\": \"water\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [\n    {\n        \"color\": \"#c8d7d4\"\n    }\n]\n},\n{\n    \"featureType\": \"water\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n    {\n        \"color\": \"#070707\"\n    }\n]\n},\n{\n    \"featureType\": \"water\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [\n    {\n        \"color\": \"#ffffff\"\n    }\n]\n}]\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}